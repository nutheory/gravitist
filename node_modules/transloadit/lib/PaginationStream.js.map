{"version":3,"sources":["../src/PaginationStream.js"],"names":["reqr","global","GENTLY","hijack","require","stream","PaginationStream","_fetchPage","objectMode","_pageno","_items","_itemsRead","length","process","nextTick","push","pop","_nitems","err","count","items","emit","Array","from","reverse","_read","Readable","module","exports"],"mappings":";;;;;;;;;;AAAA,IAAMA,OAAOC,OAAOC,MAAP,GAAgBA,OAAOC,MAAP,CAAcC,OAAd,CAAhB,GAAyCA,OAAtD;AACA;AACA,IAAMC,SAASL,KAAK,QAAL,CAAf;;IAEMM,gB;;;AACJ,4BAAaC,UAAb,EAAyB;AAAA;;AAAA,oIACjB,EAAEC,YAAY,IAAd,EADiB;;AAEvB,UAAKD,UAAL,GAAkBA,UAAlB;AACA,UAAKE,OAAL,GAAe,CAAf;AACA,UAAKC,MAAL,GAAc,EAAd;AACA,UAAKC,UAAL,GAAkB,CAAlB;AALuB;AAMxB;;;;4BAEQ;AAAA;;AACP,UAAI,KAAKD,MAAL,CAAYE,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,aAAKD,UAAL;AACA,eAAOE,QAAQC,QAAR,CAAiB;AAAA,iBAAM,OAAKC,IAAL,CAAU,OAAKL,MAAL,CAAYM,GAAZ,EAAV,CAAN;AAAA,SAAjB,CAAP;AACD;;AAED,UAAI,KAAKC,OAAL,IAAgB,IAAhB,IAAwB,KAAKN,UAAL,IAAmB,KAAKM,OAApD,EAA6D;AAC3D,eAAOJ,QAAQC,QAAR,CAAiB;AAAA,iBAAM,OAAKC,IAAL,CAAU,IAAV,CAAN;AAAA,SAAjB,CAAP;AACD;;AAED,aAAO,KAAKR,UAAL,CAAgB,EAAE,KAAKE,OAAvB,EAAgC,UAACS,GAAD,QAA2B;AAAA,YAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,YAAZC,KAAY,QAAZA,KAAY;;AAChE,YAAIF,OAAO,IAAX,EAAiB;AACf,iBAAO,OAAKG,IAAL,CAAU,OAAV,EAAmBH,GAAnB,CAAP;AACD;;AAED,eAAKD,OAAL,GAAeE,KAAf;;AAEA,eAAKT,MAAL,GAAcY,MAAMC,IAAN,CAAWH,KAAX,CAAd;AACA,eAAKV,MAAL,CAAYc,OAAZ;;AAEA,eAAO,OAAKC,KAAL,EAAP;AACD,OAXM,CAAP;AAYD;;;;EA/B4BpB,OAAOqB,Q;;AAkCtCC,OAAOC,OAAP,GAAiBtB,gBAAjB","file":"PaginationStream.js","sourcesContent":["const reqr = global.GENTLY ? GENTLY.hijack(require) : require\n// const TransloaditClient = reqr('./TransloaditClient')\nconst stream = reqr('stream')\n\nclass PaginationStream extends stream.Readable {\n  constructor (_fetchPage) {\n    super({ objectMode: true })\n    this._fetchPage = _fetchPage\n    this._pageno = 0\n    this._items = []\n    this._itemsRead = 0\n  }\n\n  _read () {\n    if (this._items.length > 0) {\n      this._itemsRead++\n      return process.nextTick(() => this.push(this._items.pop()))\n    }\n\n    if (this._nitems != null && this._itemsRead >= this._nitems) {\n      return process.nextTick(() => this.push(null))\n    }\n\n    return this._fetchPage(++this._pageno, (err, { count, items }) => {\n      if (err != null) {\n        return this.emit('error', err)\n      }\n\n      this._nitems = count\n\n      this._items = Array.from(items)\n      this._items.reverse()\n\n      return this._read()\n    })\n  }\n}\n\nmodule.exports = PaginationStream\n"]}