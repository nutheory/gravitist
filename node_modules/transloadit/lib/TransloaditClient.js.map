{"version":3,"sources":["../src/TransloaditClient.js"],"names":["reqr","global","GENTLY","hijack","require","request","crypto","_","fs","retry","PaginationStream","unknownErrMsg","TransloaditClient","opts","useSsl","authKey","Error","authSecret","_authKey","_authSecret","_service","service","_region","region","_protocol","_streams","_lastUsedAssemblyUrl","name","stream","pause","path","createReadStream","on","console","error","err","addStream","cb","defaultOpts","params","fields","waitForCompletion","extend","callback","called","result","_serviceUrl","requestOpts","url","method","timeout","streams","label","push","sendRequest","_remoteJson","awaitAssemblyCompletion","assembly_id","ncompleted","streamErrCb","length","Array","from","access","F_OK","R_OK","assemblyId","getAssembly","ok","setTimeout","assembly_url","notifyUrl","notify_url","pageno","listAssemblyNotifications","page","listAssemblies","retryOpts","retries","factor","minTimeout","maxTimeout","operation","attempt","mainError","assembly_ssl_url","left","message","templateId","listTemplates","month","jsonParams","_prepareParams","signature","_calcSignature","toSign","createHmac","update","Buffer","digest","req","sigData","calcSignature","form","append","key","val","isObject","isArray","JSON","stringify","each","value","indexOf","encodeURIComponent","auth","expires","_getExpiresDate","expiresDate","Date","setDate","getDate","toISOString","__remoteJson","warn","info","retryIn","_timeouts","unshift","code","undefined","_appendParamsToUrl","uri","headers","body","statusCode","parse","e","abbr","substr","msg","_appendForm","module","exports"],"mappings":"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","file":"TransloaditClient.js","sourcesContent":["const reqr = global.GENTLY ? GENTLY.hijack(require) : require\nconst request = reqr('request')\nconst crypto = reqr('crypto')\nconst _ = reqr('underscore')\nconst fs = reqr('fs')\nconst retry = reqr('retry')\nconst PaginationStream = reqr('./PaginationStream')\n\nlet unknownErrMsg = 'Unknown error. Please report this at '\nunknownErrMsg += 'https://github.com/transloadit/node-sdk/issues/new?title=Unknown%20error'\n\nclass TransloaditClient {\n  constructor (opts = {}) {\n    if (opts.useSsl == null) {\n      opts.useSsl = true\n    }\n\n    if (opts.authKey == null) {\n      throw new Error('Please provide an authKey')\n    }\n\n    if (opts.authSecret == null) {\n      throw new Error('Please provide an authSecret')\n    }\n\n    this._authKey = opts.authKey\n    this._authSecret = opts.authSecret\n    this._service = opts.service || 'api2.transloadit.com'\n    this._region = opts.region || 'us-east-1'\n    this._protocol = opts.useSsl ? 'https://' : 'http://'\n    this._streams = {}\n\n    this._lastUsedAssemblyUrl = ''\n  }\n\n  addStream (name, stream) {\n    stream.pause()\n    this._streams[name] = stream\n  }\n\n  addFile (name, path) {\n    const stream = fs.createReadStream(path)\n    stream.on('error', err => {\n      // handle the error event to avoid the error being thrown\n      console.error(err)\n    })\n    this.addStream(name, stream)\n  }\n\n  getLastUsedAssemblyUrl () {\n    return this._lastUsedAssemblyUrl\n  }\n\n  createAssembly (opts, cb) {\n    const defaultOpts = {\n      params: {},\n      fields: {},\n      waitForCompletion: false\n    }\n    opts = _.extend(defaultOpts, opts)\n\n    let stream\n    const callback = cb\n    let called = false\n    cb = (err, result) => {\n      if (!called) {\n        called = true\n        callback(err, result)\n      }\n    }\n\n    this._lastUsedAssemblyUrl = `${this._serviceUrl()}/assemblies`\n\n    const requestOpts = {\n      url    : this._lastUsedAssemblyUrl,\n      method : 'post',\n      timeout: 24 * 60 * 60 * 1000, // 1 day\n      params : opts.params,\n      fields : opts.fields,\n    }\n\n    const streams = (() => {\n      const result = []\n      for (let label in this._streams) {\n        stream = this._streams[label]\n        result.push(stream)\n      }\n      return result\n    })()\n\n    const sendRequest = () => {\n      this._remoteJson(requestOpts, (err, result = {}) => {\n        // reset streams so they do not get used again in subsequent requests\n        this._streams = {}\n\n        if (!err && result.error != null) {\n          err = new Error(result.error)\n        }\n\n        if (err) {\n          return cb(err)\n        }\n\n        if (!opts.waitForCompletion) {\n          return cb(null, result)\n        }\n\n        this.awaitAssemblyCompletion(result.assembly_id, cb)\n      })\n    }\n\n    let ncompleted = 0\n    const streamErrCb = err => {\n      if (err != null) {\n        cb(err)\n      }\n\n      if (++ncompleted === streams.length) {\n        sendRequest()\n      }\n    }\n\n    for (stream of Array.from(streams)) {\n      stream.on('error', cb)\n\n      if (stream.path == null) {\n        streamErrCb(null)\n        continue\n      }\n\n      fs.access(stream.path, fs.F_OK | fs.R_OK, err => {\n        if (err != null) {\n          return streamErrCb(err)\n        }\n\n        streamErrCb(null)\n      })\n    }\n\n    // make sure sendRequest gets called when there are no @_streams\n    if (streams.length === 0) {\n      sendRequest()\n    }\n  }\n\n  awaitAssemblyCompletion (assemblyId, cb) {\n    this.getAssembly(assemblyId, (err, result) => {\n      if (!err && result.error != null) {\n        err = new Error(result.error)\n      }\n\n      if (err) {\n        return cb(err)\n      }\n\n      if (result.ok === 'ASSEMBLY_COMPLETED') {\n        return cb(null, result)\n      }\n\n      if (result.ok === 'ASSEMBLY_UPLOADING' || result.ok === 'ASSEMBLY_EXECUTING') {\n        return setTimeout(() => {\n          this.awaitAssemblyCompletion(assemblyId, cb)\n        }, 1 * 1000)\n      }\n\n      return cb(new Error(unknownErrMsg))\n    })\n  }\n\n  deleteAssembly (assemblyId, cb) {\n    this.getAssembly(assemblyId, (err, { assembly_url } = {}) => {\n      if (err != null) {\n        return cb(err)\n      }\n\n      const opts = {\n        url    : assembly_url,\n        timeout: 5000,\n        method : 'del',\n        params : {},\n      }\n\n      this._remoteJson(opts, cb)\n    })\n  }\n\n  replayAssembly ({ assembly_id: assemblyId, notify_url: notifyUrl }, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/assemblies/${assemblyId}/replay`,\n      method: 'post',\n    }\n\n    if (notifyUrl != null) {\n      requestOpts.params = { notifyUrl }\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  replayAssemblyNotification ({ assembly_id: assemblyId, notify_url: notifyUrl }, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/assembly_notifications/${assemblyId}/replay`,\n      method: 'post',\n    }\n\n    if (notifyUrl != null) {\n      requestOpts.params = { notifyUrl }\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  listAssemblyNotifications (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/assembly_notifications`,\n      method: 'get',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  streamAssemblyNotifications (params) {\n    return new PaginationStream((pageno, cb) => {\n      this.listAssemblyNotifications(_.extend({}, params, { page: pageno }), cb)\n    })\n  }\n\n  listAssemblies (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/assemblies`,\n      method: 'get',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  streamAssemblies (params) {\n    return new PaginationStream((pageno, cb) => {\n      this.listAssemblies(_.extend({}, params, { page: pageno }), cb)\n    })\n  }\n\n  getAssembly (assemblyId, cb) {\n    const opts = { url: this._serviceUrl() + `/assemblies/${assemblyId}` }\n\n    const retryOpts = {\n      retries   : 5,\n      factor    : 3.28,\n      minTimeout: 1 * 1000,\n      maxTimeout: 8 * 1000,\n    }\n\n    const operation = retry.operation(retryOpts)\n    operation.attempt(attempt => {\n      this._remoteJson(opts, (err, result) => {\n        if (err != null) {\n          if (operation.retry(err)) {\n            return\n          }\n\n          return cb(operation.mainError())\n        }\n\n        if (result.assembly_url == null || result.assembly_ssl_url == null) {\n          if (operation.retry(new Error('got incomplete assembly status response'))) {\n            return\n          }\n\n          return cb(operation.mainError())\n        }\n\n        cb(null, result)\n      })\n    })\n  }\n\n  createTemplate (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates`,\n      method: 'post',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, (err, result) => {\n      let left\n      if (err) {\n        return cb(err)\n      }\n\n      if (result && result.ok) {\n        return cb(null, result)\n      }\n\n      err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n      cb(err)\n    })\n  }\n\n  editTemplate (templateId, params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates/${templateId}`,\n      method: 'put',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, (err, result) => {\n      let left\n      if (err) {\n        return cb(err)\n      }\n\n      if (result && result.ok) {\n        return cb(null, result)\n      }\n\n      err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n      cb(err)\n    })\n  }\n\n  deleteTemplate (templateId, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/templates/${templateId}`,\n      method: 'del',\n      params: {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  getTemplate (templateId, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates/${templateId}`,\n      method: 'get',\n      params: {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  listTemplates (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates`,\n      method: 'get',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  streamTemplates (params) {\n    return new PaginationStream((pageno, cb) => {\n      this.listTemplates(_.extend({}, params, { page: pageno }), cb)\n    })\n  }\n\n  getBill (month, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/bill/${month}`,\n      method: 'get',\n      params: {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  calcSignature (params) {\n    const jsonParams = this._prepareParams(params)\n    const signature = this._calcSignature(jsonParams)\n\n    return { signature, params: jsonParams }\n  }\n\n  _calcSignature (toSign) {\n    return crypto\n      .createHmac('sha1', this._authSecret)\n      .update(Buffer.from(toSign, 'utf-8'))\n      .digest('hex')\n  }\n\n  // Sets the multipart/form-data for POST, PUT and DELETE requests, including\n  // the streams, the signed params, and any additional fields.\n  _appendForm (req, params, fields) {\n    const sigData = this.calcSignature(params)\n    const jsonParams = sigData.params\n    const { signature } = sigData\n    const form = req.form()\n\n    form.append('params', jsonParams)\n\n    if (fields == null) {\n      fields = []\n    }\n\n    for (let key in fields) {\n      let val = fields[key]\n      if (_.isObject(fields[key]) || _.isArray(fields[key])) {\n        val = JSON.stringify(fields[key])\n      }\n\n      form.append(key, val)\n    }\n\n    form.append('signature', signature)\n\n    _.each(this._streams, (value, key) => form.append(key, value))\n  }\n\n  // Implements HTTP GET query params, handling the case where the url already\n  // has params.\n  _appendParamsToUrl (url, params) {\n    const sigData = this.calcSignature(params)\n    const { signature } = sigData\n    let jsonParams = sigData.params\n\n    if (url.indexOf('?') === -1) {\n      url += `?signature=${signature}`\n    } else {\n      url += `&signature=${signature}`\n    }\n\n    jsonParams = encodeURIComponent(jsonParams)\n    url += `&params=${jsonParams}`\n\n    return url\n  }\n\n  // Responsible for including auth parameters in all requests\n  _prepareParams (params) {\n    if (params == null) {\n      params = {}\n    }\n    if (params.auth == null) {\n      params.auth = {}\n    }\n    if (params.auth.key == null) {\n      params.auth.key = this._authKey\n    }\n    if (params.auth.expires == null) {\n      params.auth.expires = this._getExpiresDate()\n    }\n\n    return JSON.stringify(params)\n  }\n\n  _getExpiresDate () {\n    const expiresDate = new Date()\n    expiresDate.setDate(expiresDate.getDate() + 1)\n    return expiresDate.toISOString()\n  }\n\n  _serviceUrl () {\n    return this._protocol + this._service\n  }\n\n  // Wrapper around __remoteJson which will retry in case of error\n  _remoteJson (opts, cb) {\n    const operation = retry.operation({\n      retries   : 5,\n      factor    : 3.28,\n      minTimeout: 1 * 1000,\n      maxTimeout: 8 * 1000,\n    })\n\n    operation.attempt(() => {\n      this.__remoteJson(opts, (err, result) => {\n        if (err != null) {\n          if (err.error === 'RATE_LIMIT_REACHED') {\n            console.warn(`Rate limit reached, retrying request in ${err.info.retryIn} seconds.`)\n            // FIXME uses private internals of node-retry\n            operation._timeouts.unshift(1000 * err.info.retryIn)\n            return operation.retry(err)\n          }\n\n          if (err.code === 'ENOTFOUND') {\n            console.warn(`The network connection is down, retrying request in 3 seconds.`)\n            // FIXME uses private internals of node-retry\n            operation._timeouts.unshift(3 * 1000)\n            return operation.retry(err)\n          }\n\n          if (err.error === 'GET_ACCOUNT_UNKNOWN_AUTH_KEY') {\n            console.warn(`Invalid auth key provided.`)\n            return cb(err)\n          }\n\n          if (err.error !== undefined) {\n            console.warn(err.error + ' - ' + err.message)\n            return cb(err)\n          }\n        }\n\n        if (operation.retry(err)) {\n          return\n        }\n\n        let mainError = null\n        if (err) {\n          mainError = operation.mainError()\n        }\n\n        cb(mainError, result)\n      })\n    })\n  }\n\n  // Responsible for making API calls. Automatically sends streams with any POST,\n  // PUT or DELETE requests. Automatically adds signature parameters to all\n  // requests. Also automatically parses the JSON response.\n  __remoteJson (opts, cb) {\n    const timeout = opts.timeout || 5000\n    let url = opts.url || null\n    const method = opts.method || 'get'\n\n    if (!url) {\n      const err = new Error('No url provided!')\n      return cb(err)\n    }\n\n    if (method === 'get' && opts.params != null) {\n      url = this._appendParamsToUrl(url, opts.params)\n    }\n\n    const requestOpts = {\n      uri: url,\n      timeout,\n    }\n\n    if (opts.headers != null) {\n      requestOpts.headers = opts.headers\n    }\n\n    const req = request[method](requestOpts, (err, { body, statusCode } = {}) => {\n      if (err) {\n        return cb(err)\n      }\n\n      // parse body\n      let result = null\n      try {\n        result = JSON.parse(body)\n      } catch (e) {\n        const abbr = `${body}`.substr(0, 255)\n        let msg = `Unable to parse JSON from '${requestOpts.uri}'. `\n        msg += `Code: ${statusCode}. Body: ${abbr}. `\n        return cb(new Error(msg))\n      }\n      if (statusCode !== 200 && statusCode !== 404 && statusCode >= 400 && statusCode <= 599) {\n        return cb(_.extend(new Error(), result))\n      }\n\n      return cb(null, result)\n    })\n\n    if (method === 'post' || method === 'put' || method === 'del') {\n      this._appendForm(req, opts.params, opts.fields)\n    }\n  }\n}\n\nmodule.exports = TransloaditClient\n"]}