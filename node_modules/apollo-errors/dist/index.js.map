{"version":3,"sources":["../src/index.js"],"names":["isString","Object","prototype","toString","call","d","isObject","ApolloError","name","message","time_thrown","Date","toISOString","data","options","t","arguments","assign","m","opts","_showLocations","showLocations","path","locations","error","isInstance","e","createError","config","bind","formatError","returnNull","originalError","serialize"],"mappings":"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","file":"index.js","sourcesContent":["import assert from 'assert';\nimport ExtendableError from 'es6-error';\n\nconst isString = d => Object.prototype.toString.call(d) === '[object String]';\nconst isObject = d => Object.prototype.toString.call(d) === '[object Object]';\n\nclass ApolloError extends ExtendableError {\n  constructor (name, {\n    message,\n    time_thrown = (new Date()).toISOString(),\n    data = {},\n    options = {},\n  }) {\n    const t = (arguments[2] && arguments[2].time_thrown) || time_thrown;\n    const d = Object.assign({}, data, ((arguments[2] && arguments[2].data) || {}));\n    const m = (arguments[2] && arguments[2].message) || message;\n    const opts = Object.assign({}, options, ((arguments[2] && arguments[2].options) || {}));\n\n    super(m);\n\n    this.name = name;\n    this.message = m;\n    this.time_thrown = t;\n    this.data = d;\n    this._showLocations = !!opts.showLocations;\n  }\n  serialize () {\n    const { name, message, time_thrown, data, _showLocations, path, locations } = this;\n\n    let error = {\n      message,\n      name,\n      time_thrown,\n      data,\n    };\n\n    if (_showLocations) {\n      error.locations = locations;\n      error.path = path;\n    }\n\n    return error;\n  }\n}\n\nexport const isInstance = e => e instanceof ApolloError;\n\nexport const createError = (name, config) => {\n  assert(isObject(config), 'createError requires a config object as the second parameter');\n  assert(isString(config.message), 'createError requires a \"message\" property on the config object passed as the second parameter');\n  const e = ApolloError.bind(null, name, config);\n  return e;\n};\n\nexport const formatError = (error, returnNull = false) => {\n  const originalError = error ? error.originalError || error : null;\n\n  if (!originalError) return returnNull ? null : error;\n\n  const { name } = originalError;\n\n  if (!name || !isInstance(originalError)) return returnNull ? null : error;\n\n  const { time_thrown, message, data, _showLocations } = originalError;\n\n  if (_showLocations) {\n    const { locations, path } = error;\n    originalError.locations = locations;\n    originalError.path = path;\n  }\n\n  return originalError.serialize();\n};\n"]}