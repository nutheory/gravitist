{"version":3,"sources":["../../../src/plugins/Dashboard/index.js"],"names":["Plugin","require","Translator","dragDrop","DashboardUI","StatusBar","Informer","findAllDOMElements","toArray","prettyBytes","defaultTabIcon","FOCUSABLE_ELEMENTS","module","exports","uppy","opts","id","title","type","defaultLocale","strings","selectToUpload","closeModal","upload","importFrom","dashboardWindowTitle","dashboardTitle","copyLinkToClipboardSuccess","copyLinkToClipboardFallback","fileSource","done","localDisk","myDevice","dropPasteImport","dropPaste","browse","fileProgress","numberOfSelectedFiles","uploadAllNewFiles","emptyFolderAdded","folderAdded","defaultOptions","target","metaFields","trigger","inline","width","height","semiTransparent","showProgressDetails","hideUploadButton","hideProgressAfterFinish","note","closeModalOnClickOutside","locale","onRequestCloseModal","translator","i18n","translate","bind","requestCloseModal","openModal","isModalOpen","addTarget","hideAllPanels","showPanel","getFocusableNodes","setFocusToFirstNode","maintainFocus","initEvents","onKeydown","handleClickOutside","handleFileCard","handleDrop","handlePaste","handleInputChange","updateDashboardElWidth","render","install","plugin","callerPluginId","constructor","name","callerPluginName","callerPluginType","msg","log","state","getPluginState","newTargets","targets","slice","push","setPluginState","el","activePanel","filter","nodes","querySelectorAll","Object","keys","map","key","focusableNodes","length","focus","event","focusedItemIndex","indexOf","document","activeElement","shiftKey","preventDefault","isHidden","savedDocumentScrollPosition","window","scrollY","body","classList","add","style","top","remove","scrollTo","keyCode","ev","files","clipboardData","items","forEach","file","kind","blob","getAsFile","info","addFile","source","data","showModalTrigger","addEventListener","removeDragDropListener","on","removeEvents","removeEventListener","off","dashboardEl","querySelector","offsetWidth","containerWidth","fileId","fileCardFor","pluginState","newFiles","progress","uploadStarted","inProgressFiles","uploadComplete","isPaused","inProgressFilesArray","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","attachRenderFunctionToTarget","getPlugin","icon","isSupported","acquirers","progressindicators","startUpload","catch","err","stack","message","cancelUpload","fileID","emit","removeFile","showFileCard","fileCardDone","meta","setFileMeta","modal","totalFileCount","totalProgress","autoProceed","resumableUploads","capabilities","pauseUpload","pauseResume","retryUpload","maxWidth","maxHeight","currentWidth","isWide","discoverProviderPlugins","iteratePlugins","mount","plugins","pluginID","disableStatusBar","use","hideAfterFinish","disableInformer","uninstall","informer","removePlugin","statusBar","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst Translator = require('../../core/Translator')\nconst dragDrop = require('drag-drop')\nconst DashboardUI = require('./Dashboard')\nconst StatusBar = require('../StatusBar')\nconst Informer = require('../Informer')\nconst { findAllDOMElements, toArray } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\nconst { defaultTabIcon } = require('./icons')\n\n// some code for managing focus was adopted from https://github.com/ghosh/micromodal\n// MIT licence, https://github.com/ghosh/micromodal/blob/master/LICENSE.md\n// Copyright (c) 2017 Indrashish Ghosh\nconst FOCUSABLE_ELEMENTS = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([type=\"hidden\"]):not([hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'iframe',\n  'object',\n  'embed',\n  '[contenteditable]',\n  '[tabindex]:not([tabindex^=\"-\"])'\n]\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nmodule.exports = class Dashboard extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n\n    const defaultLocale = {\n      strings: {\n        selectToUpload: 'Select files to upload',\n        closeModal: 'Close Modal',\n        upload: 'Upload',\n        importFrom: 'Import files from',\n        dashboardWindowTitle: 'Uppy Dashboard Window (Press escape to close)',\n        dashboardTitle: 'Uppy Dashboard',\n        copyLinkToClipboardSuccess: 'Link copied to clipboard.',\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        fileSource: 'File source',\n        done: 'Done',\n        localDisk: 'Local Disk',\n        myDevice: 'My Device',\n        dropPasteImport: 'Drop files here, paste, import from one of the locations above or',\n        dropPaste: 'Drop files here, paste or',\n        browse: 'browse',\n        fileProgress: 'File progress: upload speed and ETA',\n        numberOfSelectedFiles: 'Number of selected files',\n        uploadAllNewFiles: 'Upload all new files',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: '#uppy-select-files',\n      inline: false,\n      width: 750,\n      height: 550,\n      semiTransparent: false,\n      defaultTabIcon: defaultTabIcon,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideProgressAfterFinish: false,\n      note: null,\n      closeModalOnClickOutside: false,\n      locale: defaultLocale,\n      onRequestCloseModal: () => this.closeModal()\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.closeModal = this.closeModal.bind(this)\n    this.requestCloseModal = this.requestCloseModal.bind(this)\n    this.openModal = this.openModal.bind(this)\n    this.isModalOpen = this.isModalOpen.bind(this)\n\n    this.addTarget = this.addTarget.bind(this)\n    this.hideAllPanels = this.hideAllPanels.bind(this)\n    this.showPanel = this.showPanel.bind(this)\n    this.getFocusableNodes = this.getFocusableNodes.bind(this)\n    this.setFocusToFirstNode = this.setFocusToFirstNode.bind(this)\n    this.maintainFocus = this.maintainFocus.bind(this)\n\n    this.initEvents = this.initEvents.bind(this)\n    this.onKeydown = this.onKeydown.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n    this.handleFileCard = this.handleFileCard.bind(this)\n    this.handleDrop = this.handleDrop.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.updateDashboardElWidth = this.updateDashboardElWidth.bind(this)\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  addTarget (plugin) {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName = plugin.title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (callerPluginType !== 'acquirer' &&\n        callerPluginType !== 'progressindicator' &&\n        callerPluginType !== 'presenter') {\n      let msg = 'Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter'\n      this.uppy.log(msg)\n      return\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets\n    })\n\n    return this.el\n  }\n\n  hideAllPanels () {\n    this.setPluginState({\n      activePanel: false\n    })\n  }\n\n  showPanel (id) {\n    const { targets } = this.getPluginState()\n\n    const activePanel = targets.filter((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })[0]\n\n    this.setPluginState({\n      activePanel: activePanel\n    })\n  }\n\n  requestCloseModal () {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    } else {\n      this.closeModal()\n    }\n  }\n\n  getFocusableNodes () {\n    const nodes = this.el.querySelectorAll(FOCUSABLE_ELEMENTS)\n    return Object.keys(nodes).map((key) => nodes[key])\n  }\n\n  setFocusToFirstNode () {\n    const focusableNodes = this.getFocusableNodes()\n    if (focusableNodes.length) focusableNodes[0].focus()\n  }\n\n  maintainFocus (event) {\n    var focusableNodes = this.getFocusableNodes()\n    var focusedItemIndex = focusableNodes.indexOf(document.activeElement)\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableNodes[focusableNodes.length - 1].focus()\n      event.preventDefault()\n    }\n\n    if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n      focusableNodes[0].focus()\n      event.preventDefault()\n    }\n  }\n\n  openModal () {\n    this.setPluginState({\n      isHidden: false\n    })\n\n    // save scroll position\n    this.savedDocumentScrollPosition = window.scrollY\n\n    // add class to body that sets position fixed, move everything back\n    // to scroll position\n    document.body.classList.add('uppy-Dashboard-isOpen')\n    document.body.style.top = `-${this.savedDocumentScrollPosition}px`\n\n    this.updateDashboardElWidth()\n    this.setFocusToFirstNode()\n\n    // timeout is needed because yo-yo/morphdom/nanoraf; not needed without nanoraf\n    // setTimeout(this.setFocusToFirstNode, 100)\n    // setTimeout(this.updateDashboardElWidth, 100)\n  }\n\n  closeModal () {\n    this.setPluginState({\n      isHidden: true\n    })\n\n    document.body.classList.remove('uppy-Dashboard-isOpen')\n\n    window.scrollTo(0, this.savedDocumentScrollPosition)\n  }\n\n  isModalOpen () {\n    return !this.getPluginState().isHidden || false\n  }\n\n  onKeydown (event) {\n    // close modal on esc key press\n    if (event.keyCode === 27) this.requestCloseModal(event)\n    // maintainFocus on tab key press\n    if (event.keyCode === 9) this.maintainFocus(event)\n  }\n\n  handleClickOutside () {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  handlePaste (ev) {\n    const files = toArray(ev.clipboardData.items)\n    files.forEach((file) => {\n      if (file.kind !== 'file') return\n\n      const blob = file.getAsFile()\n      if (!blob) {\n        this.uppy.log('[Dashboard] File pasted, but the file blob is empty')\n        this.uppy.info('Error pasting file', 'error')\n        return\n      }\n      this.uppy.log('[Dashboard] File pasted')\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: blob\n      })\n    })\n  }\n\n  handleInputChange (ev) {\n    ev.preventDefault()\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  initEvents () {\n    // Modal open button\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\n    }\n\n    if (!this.opts.inline && !showModalTrigger) {\n      this.uppy.log('Dashboard modal trigger not found, you won’t be able to select files. Make sure `trigger` is set correctly in Dashboard options', 'error')\n    }\n\n    if (!this.opts.inline) {\n      document.addEventListener('keydown', this.onKeydown)\n    }\n\n    // Drag Drop\n    this.removeDragDropListener = dragDrop(this.el, (files) => {\n      this.handleDrop(files)\n    })\n\n    this.uppy.on('dashboard:file-card', this.handleFileCard)\n\n    this.updateDashboardElWidth()\n    window.addEventListener('resize', this.updateDashboardElWidth)\n  }\n\n  removeEvents () {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\n    }\n\n    if (!this.opts.inline) {\n      document.removeEventListener('keydown', this.onKeydown)\n    }\n\n    this.removeDragDropListener()\n\n    this.uppy.off('dashboard:file-card', this.handleFileCard)\n\n    window.removeEventListener('resize', this.updateDashboardElWidth)\n  }\n\n  updateDashboardElWidth () {\n    const dashboardEl = this.el.querySelector('.uppy-Dashboard-inner')\n    this.uppy.log(`Dashboard width: ${dashboardEl.offsetWidth}`)\n\n    this.setPluginState({\n      containerWidth: dashboardEl.offsetWidth\n    })\n  }\n\n  handleFileCard (fileId) {\n    this.setPluginState({\n      fileCardFor: fileId || false\n    })\n  }\n\n  handleDrop (files) {\n    this.uppy.log('[Dashboard] Files were dropped')\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  render (state) {\n    const pluginState = this.getPluginState()\n    const files = state.files\n\n    const newFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadStarted\n    })\n    const inProgressFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadComplete &&\n             files[file].progress.uploadStarted &&\n             !files[file].isPaused\n    })\n\n    let inProgressFilesArray = []\n    inProgressFiles.forEach((file) => {\n      inProgressFilesArray.push(files[file])\n    })\n\n    let totalSize = 0\n    let totalUploadedSize = 0\n    inProgressFilesArray.forEach((file) => {\n      totalSize = totalSize + (file.progress.bytesTotal || 0)\n      totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0)\n    })\n    totalSize = prettyBytes(totalSize)\n    totalUploadedSize = prettyBytes(totalUploadedSize)\n\n    const attachRenderFunctionToTarget = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      return Object.assign({}, target, {\n        icon: plugin.icon || this.opts.defaultTabIcon,\n        render: plugin.render\n      })\n    }\n\n    const isSupported = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n      if (typeof plugin.isSupported !== 'function') {\n        return true\n      }\n      return plugin.isSupported()\n    }\n\n    const acquirers = pluginState.targets\n      .filter(target => target.type === 'acquirer' && isSupported(target))\n      .map(attachRenderFunctionToTarget)\n\n    const progressindicators = pluginState.targets\n      .filter(target => target.type === 'progressindicator')\n      .map(attachRenderFunctionToTarget)\n\n    const startUpload = (ev) => {\n      this.uppy.upload().catch((err) => {\n        // Log error.\n        this.uppy.log(err.stack || err.message || err)\n      })\n    }\n\n    const cancelUpload = (fileID) => {\n      this.uppy.emit('upload-cancel', fileID)\n      this.uppy.removeFile(fileID)\n    }\n\n    const showFileCard = (fileID) => {\n      this.uppy.emit('dashboard:file-card', fileID)\n    }\n\n    const fileCardDone = (meta, fileID) => {\n      this.uppy.setFileMeta(fileID, meta)\n      this.uppy.emit('dashboard:file-card')\n    }\n\n    return DashboardUI({\n      state: state,\n      modal: pluginState,\n      newFiles: newFiles,\n      files: files,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      acquirers: acquirers,\n      activePanel: pluginState.activePanel,\n      getPlugin: this.uppy.getPlugin,\n      progressindicators: progressindicators,\n      autoProceed: this.uppy.opts.autoProceed,\n      hideUploadButton: this.opts.hideUploadButton,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      showProgressDetails: this.opts.showProgressDetails,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      log: this.uppy.log,\n      i18n: this.i18n,\n      addFile: this.uppy.addFile,\n      removeFile: this.uppy.removeFile,\n      info: this.uppy.info,\n      note: this.opts.note,\n      metaFields: this.getPluginState().metaFields,\n      resumableUploads: this.uppy.state.capabilities.resumableUploads || false,\n      startUpload: startUpload,\n      pauseUpload: this.uppy.pauseResume,\n      retryUpload: this.uppy.retryUpload,\n      cancelUpload: cancelUpload,\n      fileCardFor: pluginState.fileCardFor,\n      showFileCard: showFileCard,\n      fileCardDone: fileCardDone,\n      updateDashboardElWidth: this.updateDashboardElWidth,\n      maxWidth: this.opts.maxWidth,\n      maxHeight: this.opts.maxHeight,\n      currentWidth: pluginState.containerWidth,\n      isWide: pluginState.containerWidth > 400\n    })\n  }\n\n  discoverProviderPlugins () {\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n        this.addTarget(plugin)\n      }\n    })\n  }\n\n  install () {\n    // Set default state for Modal\n    this.setPluginState({\n      isHidden: true,\n      showFileCard: false,\n      activePanel: false,\n      metaFields: this.opts.metaFields,\n      targets: []\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.mount(this, plugin)\n    })\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        target: this,\n        hideUploadButton: this.opts.hideUploadButton,\n        hideAfterFinish: this.opts.hideProgressAfterFinish\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        target: this\n      })\n    }\n\n    this.discoverProviderPlugins()\n\n    this.initEvents()\n  }\n\n  uninstall () {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin('Informer')\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin('StatusBar')\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.unmount()\n    })\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"]}