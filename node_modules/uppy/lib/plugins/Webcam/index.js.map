{"version":3,"sources":["../../../src/plugins/Webcam/index.js"],"names":["require","h","Plugin","Translator","getFileTypeExtension","canvasToBlob","supportsMediaRecorder","WebcamIcon","CameraScreen","PermissionsScreen","getMediaDevices","navigator","mediaDevices","getUserMedia","mozGetUserMedia","webkitGetUserMedia","opts","resolve","reject","call","module","exports","uppy","supportsUserMedia","protocol","location","match","id","title","type","icon","defaultLocale","strings","smile","defaultOptions","onBeforeSnapshot","Promise","countdown","locale","modes","translator","i18n","translate","bind","install","setPluginState","render","start","stop","takeSnapshot","startRecording","stopRecording","oneTwoThreeSmile","focus","webcamActive","isSupported","getConstraints","acceptsAudio","indexOf","acceptsVideo","audio","video","Error","constraints","then","stream","console","log","streamSrc","URL","createObjectURL","cameraReady","catch","err","cameraError","recorder","MediaRecorder","recordingChunks","addEventListener","event","push","data","isRecording","stopped","getVideo","addFile","dashboard","getPlugin","hideAllPanels","error","getAudioTracks","forEach","track","getVideoTracks","getVideoElement","el","querySelector","count","countDown","setInterval","clearInterval","captureInProgress","info","setTimeout","message","getImage","tagFile","name","Date","now","mimeType","canvas","document","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","blob","source","File","fileExtension","Blob","file","state","webcamState","getPluginState","onSnapshot","onStartRecording","onStopRecording","onFocus","onStop","supportsRecording","recording","src","target","mount","uninstall","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const { h } = require('preact')\nconst Plugin = require('../../core/Plugin')\nconst Translator = require('../../core/Translator')\nconst {\n  getFileTypeExtension,\n  canvasToBlob\n} = require('../../core/Utils')\nconst supportsMediaRecorder = require('./supportsMediaRecorder')\nconst WebcamIcon = require('./WebcamIcon')\nconst CameraScreen = require('./CameraScreen')\nconst PermissionsScreen = require('./PermissionsScreen')\n\n// Setup getUserMedia, with polyfill for older browsers\n// Adapted from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nfunction getMediaDevices () {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices\n  }\n\n  const getUserMedia = navigator.mozGetUserMedia || navigator.webkitGetUserMedia\n  if (!getUserMedia) {\n    return null\n  }\n\n  return {\n    getUserMedia (opts) {\n      return new Promise((resolve, reject) => {\n        getUserMedia.call(navigator, opts, resolve, reject)\n      })\n    }\n  }\n}\n\n/**\n * Webcam\n */\nmodule.exports = class Webcam extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.mediaDevices = getMediaDevices()\n    this.supportsUserMedia = !!this.mediaDevices\n    this.protocol = location.protocol.match(/https/i) ? 'https' : 'http'\n    this.id = this.opts.id || 'Webcam'\n    this.title = 'Webcam'\n    this.type = 'acquirer'\n    this.icon = WebcamIcon\n\n    const defaultLocale = {\n      strings: {\n        smile: 'Smile!'\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      onBeforeSnapshot: () => Promise.resolve(),\n      countdown: false,\n      locale: defaultLocale,\n      modes: [\n        'video-audio',\n        'video-only',\n        'audio-only',\n        'picture'\n      ]\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    // i18n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n\n    this.render = this.render.bind(this)\n\n    // Camera controls\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.takeSnapshot = this.takeSnapshot.bind(this)\n    this.startRecording = this.startRecording.bind(this)\n    this.stopRecording = this.stopRecording.bind(this)\n    this.oneTwoThreeSmile = this.oneTwoThreeSmile.bind(this)\n    this.focus = this.focus.bind(this)\n\n    this.webcamActive = false\n\n    if (this.opts.countdown) {\n      this.opts.onBeforeSnapshot = this.oneTwoThreeSmile\n    }\n  }\n\n  isSupported () {\n    return !!this.mediaDevices\n  }\n\n  getConstraints () {\n    const acceptsAudio = this.opts.modes.indexOf('video-audio') !== -1 ||\n      this.opts.modes.indexOf('audio-only') !== -1\n    const acceptsVideo = this.opts.modes.indexOf('video-audio') !== -1 ||\n      this.opts.modes.indexOf('video-only') !== -1 ||\n      this.opts.modes.indexOf('picture') !== -1\n\n    return {\n      audio: acceptsAudio,\n      video: acceptsVideo\n    }\n  }\n\n  start () {\n    if (!this.isSupported()) {\n      return Promise.reject(new Error('Webcam access not supported'))\n    }\n\n    this.webcamActive = true\n\n    const constraints = this.getConstraints()\n\n    // ask user for access to their camera\n    return this.mediaDevices.getUserMedia(constraints)\n      .then((stream) => {\n        this.stream = stream\n        console.log(stream)\n        this.streamSrc = URL.createObjectURL(this.stream)\n        this.setPluginState({\n          cameraReady: true\n        })\n      })\n      .catch((err) => {\n        this.setPluginState({\n          cameraError: err\n        })\n      })\n  }\n\n  startRecording () {\n    // TODO We can check here if any of the mime types listed in the\n    // mimeToExtensions map in Utils.js are supported, and prefer to use one of\n    // those.\n    // Right now we let the browser pick a type that it deems appropriate.\n    this.recorder = new MediaRecorder(this.stream)\n    this.recordingChunks = []\n    this.recorder.addEventListener('dataavailable', (event) => {\n      this.recordingChunks.push(event.data)\n    })\n    this.recorder.start()\n\n    this.setPluginState({\n      isRecording: true\n    })\n  }\n\n  stopRecording () {\n    const stopped = new Promise((resolve, reject) => {\n      this.recorder.addEventListener('stop', () => {\n        resolve()\n      })\n      this.recorder.stop()\n    })\n\n    return stopped.then(() => {\n      this.setPluginState({\n        isRecording: false\n      })\n      return this.getVideo()\n    })\n    .then(this.uppy.addFile)\n    .then(() => {\n      this.recordingChunks = null\n      this.recorder = null\n      const dashboard = this.uppy.getPlugin('Dashboard')\n      if (dashboard) dashboard.hideAllPanels()\n    }, (error) => {\n      this.recordingChunks = null\n      this.recorder = null\n      throw error\n    })\n  }\n\n  stop () {\n    this.stream.getAudioTracks().forEach((track) => {\n      track.stop()\n    })\n    this.stream.getVideoTracks().forEach((track) => {\n      track.stop()\n    })\n    this.webcamActive = false\n    this.stream = null\n    this.streamSrc = null\n  }\n\n  getVideoElement () {\n    return this.el.querySelector('.uppy-Webcam-video')\n  }\n\n  oneTwoThreeSmile () {\n    return new Promise((resolve, reject) => {\n      let count = this.opts.countdown\n\n      let countDown = setInterval(() => {\n        if (!this.webcamActive) {\n          clearInterval(countDown)\n          this.captureInProgress = false\n          return reject(new Error('Webcam is not active'))\n        }\n\n        if (count > 0) {\n          this.uppy.info(`${count}...`, 'warning', 800)\n          count--\n        } else {\n          clearInterval(countDown)\n          this.uppy.info(this.i18n('smile'), 'success', 1500)\n          setTimeout(() => resolve(), 1500)\n        }\n      }, 1000)\n    })\n  }\n\n  takeSnapshot () {\n    if (this.captureInProgress) return\n    this.captureInProgress = true\n\n    this.opts.onBeforeSnapshot().catch((err) => {\n      const message = typeof err === 'object' ? err.message : err\n      this.uppy.info(message, 'error', 5000)\n      return Promise.reject(new Error(`onBeforeSnapshot: ${message}`))\n    }).then(() => {\n      return this.getImage()\n    }).then((tagFile) => {\n      this.captureInProgress = false\n      this.uppy.addFile(tagFile)\n      const dashboard = this.uppy.getPlugin('Dashboard')\n      if (dashboard) dashboard.hideAllPanels()\n    }, (error) => {\n      this.captureInProgress = false\n      throw error\n    })\n  }\n\n  getImage () {\n    const video = this.getVideoElement()\n    if (!video) {\n      return Promise.reject(new Error('No video element found, likely due to the Webcam tab being closed.'))\n    }\n\n    const name = `webcam-${Date.now()}.jpg`\n    const mimeType = 'image/jpeg'\n\n    const canvas = document.createElement('canvas')\n    canvas.width = video.videoWidth\n    canvas.height = video.videoHeight\n    canvas.getContext('2d').drawImage(video, 0, 0)\n\n    return canvasToBlob(canvas, mimeType).then((blob) => {\n      return {\n        source: this.id,\n        name: name,\n        data: new File([blob], name, { type: mimeType }),\n        type: mimeType\n      }\n    })\n  }\n\n  getVideo () {\n    const mimeType = this.recordingChunks[0].type\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `webcam-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name: name,\n      data: new File([blob], name, { type: mimeType }),\n      type: mimeType\n    }\n\n    return Promise.resolve(file)\n  }\n\n  focus () {\n    if (this.opts.countdown) return\n    setTimeout(() => {\n      this.uppy.info(this.i18n('smile'), 'success', 1500)\n    }, 1000)\n  }\n\n  render (state) {\n    if (!this.webcamActive) {\n      this.start()\n    }\n\n    const webcamState = this.getPluginState()\n\n    if (!webcamState.cameraReady) {\n      return PermissionsScreen(webcamState)\n    }\n\n    return h(CameraScreen, Object.assign({}, webcamState, {\n      onSnapshot: this.takeSnapshot,\n      onStartRecording: this.startRecording,\n      onStopRecording: this.stopRecording,\n      onFocus: this.focus,\n      onStop: this.stop,\n      modes: this.opts.modes,\n      supportsRecording: supportsMediaRecorder(),\n      recording: webcamState.isRecording,\n      src: this.streamSrc\n    }))\n  }\n\n  install () {\n    this.setPluginState({\n      cameraReady: false\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    if (this.stream) {\n      this.stop()\n    }\n\n    this.unmount()\n  }\n}\n"]}