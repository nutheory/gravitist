{"version":3,"sources":["../../../src/plugins/Webcam/CameraScreen.js"],"names":["require","h","Component","SnapshotButton","RecordButton","isModeAvailable","modes","mode","indexOf","CameraScreen","componentDidMount","props","onFocus","btnContainer","firstChild","focus","componentWillUnmount","onStop","render","shouldShowRecordButton","supportsRecording","shouldShowSnapshotButton","src","el","module","exports"],"mappings":";;;;;;;;eAAyBA,QAAQ,QAAR,C;IAAjBC,C,YAAAA,C;IAAGC,S,YAAAA,S;;AACX,IAAMC,iBAAiBH,QAAQ,kBAAR,CAAvB;AACA,IAAMI,eAAeJ,QAAQ,gBAAR,CAArB;;AAEA,SAASK,eAAT,CAA0BC,KAA1B,EAAiCC,IAAjC,EAAuC;AACrC,SAAOD,MAAME,OAAN,CAAcD,IAAd,MAAwB,CAAC,CAAhC;AACD;;IAEKE,Y;;;;;;;;;yBACJC,iB,gCAAqB;AACnB,SAAKC,KAAL,CAAWC,OAAX;AACA,SAAKC,YAAL,CAAkBC,UAAlB,CAA6BC,KAA7B;AACD,G;;yBAEDC,oB,mCAAwB;AACtB,SAAKL,KAAL,CAAWM,MAAX;AACD,G;;yBAEDC,M,qBAAU;AAAA;;AACR,QAAMC,yBAAyB,KAAKR,KAAL,CAAWS,iBAAX,KAC7Bf,gBAAgB,KAAKM,KAAL,CAAWL,KAA3B,EAAkC,YAAlC,KACAD,gBAAgB,KAAKM,KAAL,CAAWL,KAA3B,EAAkC,YAAlC,CADA,IAEAD,gBAAgB,KAAKM,KAAL,CAAWL,KAA3B,EAAkC,aAAlC,CAH6B,CAA/B;AAKA,QAAMe,2BAA2BhB,gBAAgB,KAAKM,KAAL,CAAWL,KAA3B,EAAkC,SAAlC,CAAjC;;AAEA,WACE;AAAA;AAAA,QAAK,SAAM,4BAAX;AACE;AAAA;AAAA,UAAK,SAAM,4BAAX;AACE,qBAAO,SAAM,mBAAb,EAAiC,cAAjC,EAA0C,WAA1C,EAAgD,KAAK,KAAKK,KAAL,CAAWW,GAAX,IAAkB,EAAvE;AADF,OADF;AAIE;AAAA;AAAA,UAAK,SAAM,6BAAX,EAAyC,KAAK,aAACC,EAAD,EAAQ;AAAE,mBAAKV,YAAL,GAAoBU,EAApB;AAAwB,WAAhF;AACGF,mCAA2BlB,eAAe,KAAKQ,KAApB,CAA3B,GAAwD,IAD3D;AAEG,WAFH;AAGGQ,iCAAyBf,aAAa,KAAKO,KAAlB,CAAzB,GAAoD;AAHvD,OAJF;AASE,oBAAQ,SAAM,oBAAd,EAAmC,OAAM,gBAAzC;AATF,KADF;AAaD,G;;;EA/BwBT,S;;AAkC3BsB,OAAOC,OAAP,GAAiBhB,YAAjB","file":"CameraScreen.js","sourcesContent":["const { h, Component } = require('preact')\nconst SnapshotButton = require('./SnapshotButton')\nconst RecordButton = require('./RecordButton')\n\nfunction isModeAvailable (modes, mode) {\n  return modes.indexOf(mode) !== -1\n}\n\nclass CameraScreen extends Component {\n  componentDidMount () {\n    this.props.onFocus()\n    this.btnContainer.firstChild.focus()\n  }\n\n  componentWillUnmount () {\n    this.props.onStop()\n  }\n\n  render () {\n    const shouldShowRecordButton = this.props.supportsRecording && (\n      isModeAvailable(this.props.modes, 'video-only') ||\n      isModeAvailable(this.props.modes, 'audio-only') ||\n      isModeAvailable(this.props.modes, 'video-audio')\n    )\n    const shouldShowSnapshotButton = isModeAvailable(this.props.modes, 'picture')\n\n    return (\n      <div class=\"uppy uppy-Webcam-container\">\n        <div class=\"uppy-Webcam-videoContainer\">\n          <video class=\"uppy-Webcam-video\" autoplay muted src={this.props.src || ''} />\n        </div>\n        <div class=\"uppy-Webcam-buttonContainer\" ref={(el) => { this.btnContainer = el }}>\n          {shouldShowSnapshotButton ? SnapshotButton(this.props) : null}\n          {' '}\n          {shouldShowRecordButton ? RecordButton(this.props) : null}\n        </div>\n        <canvas class=\"uppy-Webcam-canvas\" style=\"display: none;\" />\n      </div>\n    )\n  }\n}\n\nmodule.exports = CameraScreen\n"]}